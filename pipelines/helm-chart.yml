# Workflows:
# 1. A PR was merged into master in the concourse-chart repo
#   - Run one of the publish jobs
#
# 2. New major/minor version of concourse/concourse is available:
#   - Run merge-dev-into-master to add in any new flags that were added to Concourse
#   - Run concourse-app-bump to bump the imageTag and related fields
#   - Run one of the publish jobs
#
# 3. New patch version of concourse/concourse is available:
#   - Run concourse-app-bump to bump the imageTag and related fields
#   - Run one of the publish jobs
#

groups:
- name: dependencies
  jobs:
  - concourse-app-bump
  - postgres-chart-bump

- name: publish
  jobs:
  - k8s-smoke
  - publish-chart-major
  - publish-chart-minor
  - publish-chart-patch

jobs:
- name: concourse-app-bump
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: concourse-release
      params:
        globs: [none]
    - get: concourse-chart
    - get: ci
  - task: bump-chart-app-version
    file: ci/tasks/bump-chart-app-version.yml
  - put: concourse-chart
    inputs: [concourse-chart-bumped]
    params:
      repository: concourse-chart-bumped
      merge: true

- name: postgres-chart-bump
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: postgres-chart-release
    - get: concourse-chart
    - get: ci
  - task: bump-postgres-chart-version
    file: ci/tasks/bump-postgres-chart-version.yml
  - put: concourse-chart
    inputs: [concourse-chart-bumped]
    params:
      repository: concourse-chart-bumped
      merge: true

- name: k8s-smoke
  public: true
  serial: true
  plan:
    - in_parallel:
      - get: concourse
        trigger: true
      - get: concourse-dev-image
        params: {format: oci}
        trigger: true
      - get: concourse-chart
        trigger: true
      - get: unit-image
      - get: ci
    - try:
        task: try-delete
        image: unit-image
        file: ci/tasks/k8s-delete.yml
        params:
          SERVICE_ACCOUNT_KEY: ((k8s_topgun.service_account_key))
          RELEASE_NAME: concourse-chart-smoke
    - task: deploy
      image: unit-image
      input_mapping: {image-info: concourse-dev-image}
      file: ci/tasks/k8s-deploy.yml
      params:
        SERVICE_ACCOUNT_KEY: ((k8s_topgun.service_account_key))
        RELEASE_NAME: concourse-chart-smoke
    - task: k8s-smoke
      image: unit-image
      file: ci/tasks/k8s-smoke.yml
      params:
        SERVICE_ACCOUNT_KEY: ((k8s_topgun.service_account_key))
        RELEASE_NAME: concourse-chart-smoke
        MAX_TICKS: 300
  ensure:
    task: delete
    image: unit-image
    file: ci/tasks/k8s-delete.yml
    params:
      SERVICE_ACCOUNT_KEY: ((k8s_topgun.service_account_key))
      RELEASE_NAME: concourse-chart-smoke

- name: publish-chart-major
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: version
      params: {bump: major}
    - get: concourse-chart
      passed: [ k8s-smoke ]
    - get: chart-repo-index
    - get: ci
  - task: bump-chart-version
    file: ci/tasks/bump-chart-version.yml
  - task: package-chart
    file: ci/tasks/package-chart.yml
  - in_parallel:
    - put: version
      params: {file: version/version}
    - put: chart-repo-index
      inputs: [packaged-chart]
      params:
        file: packaged-chart/index.yaml
    - put: chart-repo
      inputs: [packaged-chart]
      params:
        file: packaged-chart/concourse-*.tgz
    - put: concourse-chart
      params:
        repository: concourse-chart
        merge: true
        tag: version/version
        tag_prefix: v

- name: publish-chart-minor
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: version
      params: {bump: minor}
    - get: concourse-chart
      passed: [ k8s-smoke ]
    - get: chart-repo-index
    - get: ci
  - task: bump-chart-version
    file: ci/tasks/bump-chart-version.yml
  - task: package-chart
    file: ci/tasks/package-chart.yml
  - in_parallel:
    - put: version
      params: {file: version/version}
    - put: chart-repo-index
      inputs: [packaged-chart]
      params:
        file: packaged-chart/index.yaml
    - put: chart-repo
      inputs: [packaged-chart]
      params:
        file: packaged-chart/concourse-*.tgz
    - put: concourse-chart
      params:
        repository: concourse-chart
        merge: true
        tag: version/version
        tag_prefix: v

- name: publish-chart-patch
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: postgres-chart-release
      passed: [postgres-chart-bump]
    - get: version
      params: {bump: patch}
    - get: concourse-chart
      passed: [ k8s-smoke ]
    - get: chart-repo-index
    - get: ci
  - task: bump-chart-version
    file: ci/tasks/bump-chart-version.yml
  - task: package-chart
    file: ci/tasks/package-chart.yml
  - in_parallel:
    - put: version
      params: {file: version/version}
    - put: chart-repo-index
      inputs: [packaged-chart]
      params:
        file: packaged-chart/index.yaml
    - put: chart-repo
      inputs: [packaged-chart]
      params:
        file: packaged-chart/concourse-*.tgz
    - put: concourse-chart
      params:
        repository: concourse-chart
        merge: true
        tag: version/version
        tag_prefix: v

resources:
- name: version
  type: semver
  icon: tag
  source:
    driver: gcs
    bucket: concourse-artifacts
    json_key: ((concourse_artifacts_json_key))
    key: helm/((version))-chart-version

- name: concourse-chart
  type: git
  icon: github
  source:
    uri: git@github.com:concourse/concourse-chart.git
    branch: ((concourse-chart-branch))
    private_key: ((concourse_chart_private_key))

- name: chart-repo
  type: gcs
  source:
    bucket: concourse-charts
    json_key: ((concourse_charts_json_key))
    regexp: concourse-(.*)\.tgz

- name: chart-repo-index
  type: gcs
  source:
    bucket: concourse-charts
    json_key: ((concourse_charts_json_key))
    versioned_file: index.yaml

- name: ci
  type: git
  icon: github
  source:
    uri: https://github.com/concourse/ci.git
    branch: master

- name: concourse-release
  type: github-release
  source:
    owner: concourse
    repository: concourse
    semver_constraint: ~((version))
    access_token: ((concourse_github_dummy.access_token))

- name: postgres-chart-release
  type: artifacthub
  check_every: 24h
  source:
    repository_name: bitnami
    package_name: postgresql

- name: unit-image
  type: registry-image
  icon: docker
  source:
    repository: concourse/unit
    username: ((docker.username))
    password: ((docker.password))

- name: concourse
  type: git
  icon: github
  source:
    uri: https://github.com/concourse/concourse.git
    branch: ((concourse-chart-branch))

- name: concourse-dev-image
  type: registry-image
  icon: docker
  source:
    repository: concourse/concourse-dev
    tag: latest
    username: ((docker.username))
    password: ((docker.password))

resource_types:
- name: gcs
  type: registry-image
  source: {repository: frodenas/gcs-resource}

- name: artifacthub
  type: registry-image
  source:
    repository: ghcr.io/hdisysteme/artifacthub-resource
