# the following vars must be specified:
#
#   ((number))              the PR number
#   ((branch))              only PRs against this branch will be run
#   ((dev_image_tag))       the tag to use for the dev image
#   ((concourse_image_tag)) the tag to use for the concourse image for upgrade/downgrade test in integration

---
pending_status_notification: &pending_status_notification
  put: concourse-status-update
  resource: concourse-pr
  inputs: [concourse-pr]
  params: { path: concourse-pr, status: pending, context: $BUILD_JOB_NAME }
  no_get: true
  tags: [pr]

status_notifications: &status_notifications
  on_success:
    put: concourse-pr
    inputs: [concourse-pr]
    params: { path: concourse-pr, status: success, context: $BUILD_JOB_NAME }
    no_get: true
    tags: [pr]
  on_failure:
    put: concourse-pr
    inputs: [concourse-pr]
    params: { path: concourse-pr, status: failure, context: $BUILD_JOB_NAME }
    no_get: true
    tags: [pr]
  on_abort:
    put: concourse-pr
    inputs: [concourse-pr]
    params: { path: concourse-pr, status: failure, context: $BUILD_JOB_NAME }
    no_get: true
    tags: [pr]
  on_error:
    put: concourse-pr
    inputs: [concourse-pr]
    params: { path: concourse-pr, status: failure, context: $BUILD_JOB_NAME }
    no_get: true
    tags: [pr]

resource_types:
  - name: bosh-deployment
    type: registry-image
    source: { repository: cloudfoundry/bosh-deployment-resource }

  - name: pull-request
    type: registry-image
    source:
      repository: aoldershaw/github-pr-resource

resources:
  - name: concourse-base
    type: git
    icon: github
    source:
      uri: https://github.com/concourse/concourse.git
      branch: ((branch))

  - name: concourse-pr
    type: pull-request
    icon: source-pull
    source:
      repository: concourse/concourse
      access_token: ((pull_requests_access_token))
      number: ((number))

  - name: validator
    type: github-release
    icon: github
    source:
      owner: clarafu
      repository: release-me
      access_token: ((pull_requests_access_token))

  - name: ci
    type: git
    icon: github
    source:
      uri: https://github.com/concourse/ci
      branch: master

  - name: concourse-image
    type: registry-image
    icon: docker
    source:
      repository: concourse/concourse
      tag: ((concourse_image_tag))
      username: ((docker.username))
      password: ((docker.password))

  - name: dev-image
    type: registry-image
    icon: docker
    source:
      repository: concourse/dev
      tag: ((dev_image_tag))
      username: ((docker.username))
      password: ((docker.password))

  - name: pr-image
    type: registry-image
    icon: docker
    source:
      repository: concourse/dev
      tag: pr-((number))
      username: ((docker.username))
      password: ((docker.password))

  - name: unit-image
    type: registry-image
    icon: docker
    source: { repository: concourse/unit }

  - name: postgres-image
    type: registry-image
    icon: docker
    source: { repository: postgres }

  - name: vault-image
    type: registry-image
    icon: docker
    source: { repository: vault }

  - name: oci-build-task
    type: registry-image
    icon: docker
    source:
      repository: concourse/oci-build-task

jobs:
  - name: pr-image
    public: true
    serial: true
    serial_groups: [heavy]
    plan:
      - in_parallel:
          - get: concourse-pr
            trigger: true
            tags: [pr]
          - get: oci-build-task
            tags: [pr]
          - get: dev-image
            params: { format: oci }
            tags: [pr]
          - get: ci
            tags: [pr]
      - task: yarn-build
        attempts: 3
        file: ci/tasks/yarn-build/task.yml
        input_mapping: { concourse: concourse-pr }
        tags: [pr]
      - task: build
        tags: [pr]
        image: oci-build-task
        privileged: true
        config:
          platform: linux
          params:
            CONTEXT: built-concourse
            IMAGE_ARG_base_image: dev-image/image.tar
            TARGET: with-fly
          inputs: [{ name: built-concourse }, { name: dev-image }]
          outputs: [{ name: image }]
          caches: [{ path: cache }]
          run: { path: build }
      - put: pr-image
        params: { image: image/image.tar }
        no_get: true
        tags: [pr]

  - name: unit
    public: true
    serial: true
    serial_groups: [heavy]
    <<: *status_notifications
    plan:
      - in_parallel:
          - do:
            - get: concourse-pr
              trigger: true
              tags: [pr]
            - *pending_status_notification
          - get: concourse-base
            tags: [pr]
          - get: unit-image
            tags: [pr]
          - get: ci
            tags: [pr]
      - task: check-migration-order
        timeout: 5m
        image: unit-image
        file: ci/tasks/check-migration-order/task.yml
        tags: [pr]
      - task: yarn-analyse
        attempts: 3
        image: unit-image
        file: ci/tasks/yarn-analyse/task.yml
        input_mapping: { concourse: concourse-pr }
        tags: [pr]
      - task: yarn-test
        attempts: 3
        image: unit-image
        file: ci/tasks/yarn-test/task.yml
        input_mapping: { concourse: concourse-pr }
        tags: [pr]
      - task: yarn-benchmark
        attempts: 3
        image: unit-image
        file: ci/tasks/yarn-benchmark/task.yml
        input_mapping: { concourse: concourse-pr }
        tags: [pr]
      - timeout: 1h
        in_parallel:
          - task: unit
            image: unit-image
            file: ci/tasks/unit/task.yml
            input_mapping: { concourse: built-concourse }
            tags: [pr]
          - task: unit-baggageclaim
            attempts: 3
            image: unit-image
            file: ci/tasks/unit-baggageclaim/task.yml
            privileged: true
            input_mapping: { concourse: built-concourse }
            tags: [pr]

  - name: validate-labels
    public: true
    serial: true
    <<: *status_notifications
    plan:
      - in_parallel:
          - do:
            - get: concourse-pr
              trigger: true
              tags: [pr]
            - *pending_status_notification
          - get: ci
            tags: [pr]
          - get: validator
            tags: [pr]
      - task: validate-pr
        timeout: 5m
        file: ci/tasks/validate-pr/task.yml
        tags: [pr]
        params:
          GITHUB_TOKEN: ((concourse_github_dummy.access_token))

  - name: compile-check
    public: true
    serial: true
    serial_groups: [heavy]
    <<: *status_notifications
    plan:
      - in_parallel:
          - do:
            - get: concourse-pr
              trigger: true
              tags: [pr]
            - *pending_status_notification
          - get: ci
            tags: [pr]
          - get: unit-image
            tags: [pr]
      - across:
          - var: platform
            max_in_flight: 1
            values:
              - os: linux
                arch: amd64
              - os: darwin
                arch: amd64
              - os: windows
                arch: amd64
        fail_fast: true
        task: concourse-compile
        image: unit-image
        file: ci/tasks/concourse-compile/task.yml
        input_mapping:
          concourse: concourse-pr
        params:
          PLATFORM: ((.:platform.os))
          ARCH: ((.:platform.arch))

  - name: containerd-integration
    public: true
    serial: true
    <<: *status_notifications
    plan:
      - in_parallel:
          - do:
            - get: concourse-pr
              trigger: true
              tags: [pr]
            - *pending_status_notification
          - get: dev-image
            tags: [pr]
          - get: ci
            tags: [pr]
      - task: integration
        image: dev-image
        privileged: true
        timeout: 1h
        file: ci/tasks/containerd-integration/task.yml
        input_mapping: { concourse: concourse-pr }
        tags: [pr]

  - name: testflight
    public: true
    serial: true
    serial_groups: [heavy]
    <<: *status_notifications
    plan:
      - in_parallel:
          - do:
            - get: concourse-pr
              passed: [pr-image]
              trigger: true
              tags: [pr]
            - *pending_status_notification
          - get: pr-image
            passed: [pr-image]
            params: { format: oci }
            tags: [pr]
          - get: postgres-image
            params: { format: oci }
            tags: [pr]
          - get: unit-image
            tags: [pr]
          - get: ci
            tags: [pr]
      - across:
          - var: runtime
            values:
              - guardian
              - containerd
            max_in_flight: all
        task: testflight
        tags: [pr]
        image: unit-image
        timeout: 1h
        privileged: true
        file: ci/tasks/testflight/task.yml
        input_mapping: { concourse: concourse-pr, dev-image: pr-image }
        params:
          RUNTIME: ((.:runtime))
          DOWNLOAD_CLI: false

  - name: watsjs
    public: true
    serial: true
    serial_groups: [heavy]
    <<: *status_notifications
    plan:
      - in_parallel:
          - do:
            - get: concourse-pr
              passed: [pr-image]
              trigger: true
              tags: [pr]
            - *pending_status_notification
          - get: pr-image
            passed: [pr-image]
            params: { format: oci }
            tags: [pr]
          - get: postgres-image
            params: { format: oci }
            tags: [pr]
          - get: ci
            tags: [pr]
      - task: yarn-build
        attempts: 3
        file: ci/tasks/yarn-build/task.yml
        input_mapping: { concourse: concourse-pr }
        tags: [pr]
      - task: watsjs
        attempts: 3
        timeout: 1h
        privileged: true
        file: ci/tasks/watsjs/task.yml
        input_mapping: { concourse: built-concourse, dev-image: pr-image }
        tags: [pr]

  - name: integration
    public: true
    serial: true
    serial_groups: [heavy]
    <<: *status_notifications
    plan:
      - in_parallel:
          - do:
            - get: concourse-pr
              passed: [pr-image]
              trigger: true
              tags: [pr]
            - *pending_status_notification
          - get: concourse-image
            params: { format: oci }
            tags: [pr]
          - get: pr-image
            passed: [pr-image]
            params: { format: oci }
            tags: [pr]
          - get: postgres-image
            params: { format: oci }
            tags: [pr]
          - get: vault-image
            params: { format: oci }
            tags: [pr]
          - get: ci
            tags: [pr]
      - task: integration
        timeout: 1h
        attempts: 3
        privileged: true
        input_mapping: { concourse: concourse-pr, dev-image: pr-image }
        file: ci/tasks/integration-tests/task.yml
        tags: [pr]

  - name: go-format-check
    public: true
    serial: true
    <<: *status_notifications
    plan:
      - in_parallel:
          - do:
            - get: concourse-pr
              tags: [pr]
              trigger: true
            - *pending_status_notification
          - get: unit-image
            tags: [pr]
          - get: ci
            tags: [pr]
      - task: check-format-for-go-files
        image: unit-image
        input_mapping:
          concourse: concourse-pr
        tags: [pr]
        file: ci/tasks/check-gofmt/task.yml
