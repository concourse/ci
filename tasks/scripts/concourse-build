#!/bin/bash
# vim: set ft=sh

set -e -x

export GOPATH=$PWD/gopath
export PATH=$PWD/gopath/bin:$PATH

if [ -z "${PLATFORM}" ]; then
  echo "usage: PLATFORM=<platform> $0" >&2
  exit 1
fi

current_ref="$(git -C concourse rev-parse --short HEAD)"

version=""
if [ -e version/version ]; then
  version="$(cat version/version)+${current_ref}"
else
  latest_tag="$(git -C concourse describe --tags --abbrev=0 HEAD)"
  commits_since="$(git -C concourse rev-list ${latest_tag}..HEAD --count)"
  latest_version=$(echo $latest_tag | sed s/v//)
  version="${latest_version}+dev.${commits_since}.${current_ref}"
fi

archive=concourse-${version}.${PLATFORM}.${GOARCH:-amd64}.tgz

final_version=""
ldflags=""
if [ -e final-version/version ]; then
  final_version="$(cat final-version/version)"
  ldflags="-X github.com/concourse/concourse.Version=$final_version"
fi

pushd concourse
  go install github.com/gobuffalo/packr/packr
  packr build -o concourse -ldflags "$ldflags" ./cmd/concourse

  if [ -n "$final_version" ]; then
    test "$(./concourse --version)" = "$final_version"
  fi
popd

output=concourse-tarball

mkdir $output/concourse

bin=$output/concourse/bin
mkdir $bin
[ -d linux-dependencies ] && cp -a linux-dependencies/* $bin
mv concourse/concourse $bin

[ -d resource-types ] && cp -a resource-types $output/concourse

fly_assets=$output/concourse/fly-assets
mkdir $fly_assets
cp -a fly-linux/fly-*.tgz $fly_assets
cp -a fly-windows/fly-*.zip $fly_assets
cp -a fly-darwin/fly-*.tgz $fly_assets

pushd $output
  tar -czf $archive concourse
  shasum "$archive" > "${archive}.sha1"

  rm -r concourse
popd
