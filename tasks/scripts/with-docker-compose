#!/bin/bash

set -euo pipefail

source ci/tasks/scripts/docker-helpers.sh

start_docker

docker load -i dev-image/image.tar
docker load -i "postgres-image/image.tar"

# note: tag must take precedence, since the digest returned by the
# registry-image resource is not the same as the image id in the docker CLI.
# the oci-build-task, however, gives a digest that can be used
[ -f dev-image/digest ] && export CONCOURSE_DEV_IMAGE="$(cat dev-image/digest)"
[ -f dev-image/tag ] && export CONCOURSE_DEV_IMAGE="$(cat dev-image/repository):$(cat dev-image/tag)"
export POSTGRES_TAG=$(cat "postgres-image/tag")
export CONCOURSE_KEYS=$PWD/keys

DOCKER_COMPOSE_FLAGS="-f concourse/docker-compose.yml -f ci/overrides/docker-compose.ci-$RUNTIME.yml"

ci/tasks/scripts/generate-keys

docker compose \
  $DOCKER_COMPOSE_FLAGS \
  -f ci/overrides/docker-compose.no-build.yml \
  up --no-build -d

trap stop_docker_compose EXIT SIGTERM SIGINT
function stop_docker_compose() {
  docker compose -f concourse/docker-compose.yml logs > docker-compose.log
  docker compose -f concourse/docker-compose.yml down
  stop_docker
}

"$@"
