platform: linux

image_resource:
  type: registry-image
  source: {repository: concourse/oci-build-task}

params:
  DOCKERFILE: ci/dockerfiles/resource-types/Dockerfile
  REPOSITORY: concourse/dev

inputs:
- name: ci
- name: bosh-io-release-resource
- name: bosh-io-stemcell-resource
- name: docker-image-resource
- name: git-resource
- name: github-release-resource
- name: hg-resource
- name: mock-resource
- name: pool-resource
- name: registry-image-resource
- name: s3-resource
- name: semver-resource
- name: time-resource

outputs:
- name: image

run:
  path: sh
  args:
  - -c
  - |
    set -euo pipefail
    for resource in $(ls | grep resource); do
        echo repacking ${resource}
        cd ${resource}
            resource=$(echo ${resource%-resource})
            tar czf rootfs.tgz --directory=rootfs/ .
            rm -rf ./rootfs/

            vr=$(cat tag)
            version=$(echo ${vr%%-*})
            privileged=$(if [[ ${resource} == "docker-image" ]]; then echo true; else echo false; fi;)
            version_history=$(if [[ ${resource} == "time" ]]; then echo true; else echo false; fi;)

            echo { >> resource_metadata.json
            echo \ \ \"type\": \"${resource}\", >> resource_metadata.json
            echo \ \ \"version\": \"${version}\", >> resource_metadata.json
            echo \ \ \"privileged\": ${privileged}, >> resource_metadata.json
            echo \ \ \"unique_version_history\": ${version_history} >> resource_metadata.json
            echo } >> resource_metadata.json

            rm metadata.json repository digest tag
        cd -
    done;

    build
